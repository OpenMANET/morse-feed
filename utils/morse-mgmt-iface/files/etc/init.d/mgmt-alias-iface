#!/bin/sh /etc/rc.common

START=99
STOP=50
USE_PROCD=1

start_service() {
	procd_open_instance
	procd_set_param command /usr/sbin/mgmt-alias-iface
	procd_close_instance
}

reload_service() {
	stop
	start
}

_add_interface_trigger() {
	procd_add_reload_interface_trigger "$1"
}

# The 'ubus subscribe' command registers to an object ID associated with the subscribed object path.
# When the publisher of that object path restarts, a new object ID is generated for the same path.
# As a result, the subscriber stops receiving notifications because it remains tied to the old object ID.
# In our case, when the network interface reloads, we need to respawn this script to ensure
# 'ubus subscribe network.device' continues receiving events.
service_triggers()
{
	config_load network
	config_foreach _add_interface_trigger interface
}